{"version":3,"file":"minimal-browser-event-emitter.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,sBCCnE,MAAMI,EACpB,WAAAC,GACCC,KAAKC,QAAU,CAAC,CACjB,CAEA,EAAAC,CAAGC,EAAKC,GACP,IAAIH,EAAUD,KAAKC,QAAQE,GAK3B,OAJKF,IACJA,EAAUD,KAAKC,QAAQE,GAAO,IAE/BF,EAAQI,KAAKD,GACNJ,IACR,CAEA,IAAAM,CAAKH,KAAQI,GACZ,GAAIJ,KAAOH,KAAKC,QACf,IAAK,IAAIG,KAAUJ,KAAKC,QAAQE,GAC/BC,EAAOI,MAAMR,KAAMO,EAGtB,CAOA,cAAAE,CAAeC,EAAWC,GACrBD,KAAaV,KAAKC,UACrBD,KAAKC,QAAQS,GAAaV,KAAKC,QAAQS,GAAWE,QAAOC,GACjDA,IAASF,IAGnB,ECxBD,ICVIG,EDUAC,EAA8B,oBAAhBC,YAA8BlB,EAAYkB,YCL3DF,EAD0B,oBAAhBE,YDOI,cAA2BD,EACzC,WAAAhB,CAAYkB,GACXC,MAAMD,GAELjB,KAAKmB,iBADHF,GAIsBjB,IAE1B,CAQA,EAAAE,CAAGQ,EAAWC,GACb,GAAGX,KAAKmB,iBAAiBC,iBAAkB,CAC1C,IAAIC,EAAkBC,IACrBX,EAASH,MAAMR,KAAMsB,EAAMC,OAAM,EAElCZ,EAASU,eAAiBA,EAC1BrB,KAAKmB,iBAAiBC,iBAAiBV,EAAWW,EACnD,MAECH,MAAMhB,GAAGQ,EAAWC,GAErB,OAAOX,IACR,CASA,IAAAM,CAAKI,KAAcH,GAOlB,OANGP,KAAKmB,iBAAiBK,cACxBxB,KAAKmB,iBAAiBK,cAAcxB,KAAKyB,WAAWf,EAAWH,IAG/DW,MAAMZ,KAAKI,KAAcH,GAEnBP,IACR,CAOA,cAAAS,CAAeC,EAAWC,GAQzB,OAPGX,KAAKmB,iBAAiBO,qBACxBf,EAAWA,EAASU,gBAAkBV,EACtCX,KAAKmB,iBAAiBO,oBAAoBhB,EAAWC,IAGrDO,MAAMT,eAAeC,EAAWC,GAE1BX,IACR,CAEA,UAAAyB,CAAWf,EAAWH,GACrB,GAA0B,mBAAhBoB,YACT,OAAO,IAAIA,YAAYjB,EAAW,CACjCa,OAAQhB,IAGL,CACJ,IAAIJ,EAAM,IAAIyB,MAAMlB,GAEpB,OADAP,EAAIoB,OAAShB,EACNJ,CACR,CACD,GC9EUL,EAIX,U","sources":["webpack://@webhandle/minimal-browser-event-emitter/webpack/bootstrap","webpack://@webhandle/minimal-browser-event-emitter/webpack/runtime/define property getters","webpack://@webhandle/minimal-browser-event-emitter/webpack/runtime/hasOwnProperty shorthand","webpack://@webhandle/minimal-browser-event-emitter/./client-js/streamish.mjs","webpack://@webhandle/minimal-browser-event-emitter/./client-js/event-emitter.mjs","webpack://@webhandle/minimal-browser-event-emitter/./client-js/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\nexport default class Streamish {\n\tconstructor() {\n\t\tthis.handles = {}\n\t}\n\n\ton(evt, handle) {\n\t\tlet handles = this.handles[evt]\n\t\tif (!handles) {\n\t\t\thandles = this.handles[evt] = []\n\t\t}\n\t\thandles.push(handle)\n\t\treturn this\n\t}\n\n\temit(evt, ...args) {\n\t\tif (evt in this.handles) {\n\t\t\tfor (let handle of this.handles[evt]) {\n\t\t\t\thandle.apply(this, args)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified listener from the listener array for the event named eventName.\n\t * @param {string} eventName The event type name\n\t * @param {function} listener The listener function\n\t */\n\tremoveListener(eventName, listener) {\n\t\tif (eventName in this.handles) {\n\t\t\tthis.handles[eventName] = this.handles[eventName].filter(func => {\n\t\t\t\treturn func !== listener\n\t\t\t})\n\t\t}\n\t}\n}","import Streamish from \"./streamish.mjs\"\n\n/**\n * Add this most basic of the EventEmitter functions (on, emit, removeListener) to the browser's\n * EventTarget functionality.\n * \n * The eventEmitter.emit() method allows an arbitrary set of arguments to be passed to the listener \n * functions. Keep in mind that when an ordinary listener function is called, the standard this \n * keyword is intentionally set to reference the EventEmitter instance to which the listener is attached.\n */\nlet base = typeof EventTarget === 'undefined' ? Streamish : EventTarget\nexport default class EventEmitter extends base {\n\tconstructor(target) {\n\t\tsuper(target)\n\t\tif(target) {\n\t\t\tthis.innerEventTarget = target\n\t\t}\n\t\telse {\n\t\t\tthis.innerEventTarget = this\n\t\t}\n\t}\n\t/**\n\t * Adds the listener function to the end of the listeners array for the event named eventName. No checks \n\t * are made to see if the listener has already been added. Multiple calls passing the same combination \n\t * of eventName and listener will result in the listener being added, and called, multiple times.\n\t * @param {string} eventName The event type name\n\t * @param {*} listener The listener function where has arbitrary arguments\n\t */\n\ton(eventName, listener) {\n\t\tif(this.innerEventTarget.addEventListener) {\n\t\t\tlet nativeListener = (event) => {\n\t\t\t\tlistener.apply(this, event.detail)\n\t\t\t}\n\t\t\tlistener.nativeListener = nativeListener\n\t\t\tthis.innerEventTarget.addEventListener(eventName, nativeListener)\n\t\t}\n\t\telse {\n\t\t\tsuper.on(eventName, listener)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Synchronously calls each of the listeners registered for the event named eventName, in the order \n\t * they were registered, passing the supplied arguments to each.\n\t * \n\t * @param {string} eventName The event type name\n\t * @param  {...any} args \n\t */\n\temit(eventName, ...args) {\n\t\tif(this.innerEventTarget.dispatchEvent) {\n\t\t\tthis.innerEventTarget.dispatchEvent(this._makeEvent(eventName, args))\n\t\t}\n\t\telse {\n\t\t\tsuper.emit(eventName, ...args)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Removes the specified listener from the listener array for the event named eventName.\n\t * @param {string} eventName The event type name\n\t * @param {function} listener The listener function\n\t */\n\tremoveListener(eventName, listener) {\n\t\tif(this.innerEventTarget.removeEventListener) {\n\t\t\tlistener = listener.nativeListener || listener\n\t\t\tthis.innerEventTarget.removeEventListener(eventName, listener)\n\t\t}\n\t\telse {\n\t\t\tsuper.removeListener(eventName, listener)\n\t\t}\n\t\treturn this\n\t}\n\t\n\t_makeEvent(eventName, args) {\n\t\tif(typeof CustomEvent === 'function') {\n\t\t\treturn new CustomEvent(eventName, {\n\t\t\t\tdetail: args\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet evt = new Event(eventName)\n\t\t\tevt.detail = args\n\t\t\treturn evt\n\t\t}\n\t}\n}","let Emitter\nimport Streamish from \"./streamish.mjs\"\nimport EventEmitter from \"./event-emitter.mjs\"\n\nif (typeof EventTarget !== 'undefined') {\n\tEmitter = EventEmitter\n}\nelse {\n\tEmitter = Streamish\n}\n\n\nexport default Emitter"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Streamish","constructor","this","handles","on","evt","handle","push","emit","args","apply","removeListener","eventName","listener","filter","func","Emitter","base","EventTarget","target","super","innerEventTarget","addEventListener","nativeListener","event","detail","dispatchEvent","_makeEvent","removeEventListener","CustomEvent","Event"],"sourceRoot":""}